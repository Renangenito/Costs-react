{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renan\\\\Documents\\\\Meus-projetos de front end\\\\Projetos-React\\\\projeto-cost-react\\\\costs\\\\src\\\\components\\\\pages\\\\Project.js\";\nimport { parse, v4 as uuidv4 } from 'uuid';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport styles from './Project.module.css';\nimport Loading from '../layout/Loading';\nimport Container from '../layout/Container';\nimport ProjectForm from '../project/ProjectForm';\nimport Message from '../layout/Message';\nimport ServiceForm from '../service/ServiceForm';\nimport ServiceCard from '../service/ServiceCard';\n\nfunction Project() {\n  let {\n    id\n  } = useParams();\n  const [project, setProject] = useState([]);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [showServiceForm, setShowServiceForm] = useState(false);\n  const [services, setServices] = useState([]);\n  const [message, setMessage] = useState('');\n  const [type, setType] = useState('success');\n  useEffect(() => {\n    // Para ver o loading\n    setTimeout(() => fetch(`http://localhost:5000/projects/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      setProject(data);\n      setServices(data.services);\n    }, 300), 0);\n  }, [id]);\n\n  function editPost(project) {\n    // budget validation\n    if (project.budget < project.cost) {\n      setMessage('O Orçamento não pode ser menor que o custo do projeto!');\n      setType('error');\n      return false;\n    }\n\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(resp => resp.json()).then(data => {\n      setProject(data);\n      setShowProjectForm(!showProjectForm);\n      setMessage('Projeto atualizado!');\n      setType('success');\n    });\n  }\n\n  function createService(project) {\n    // last service\n    const lastService = project.services[project.services.length - 1];\n    lastService.id = uuidv4();\n    const lastServiceCost = lastService.cost;\n    const newCost = parseFloat(project.cost) + parseFloat(lastServiceCost); // maximum value validation\n\n    if (newCost > parseFloat(project.budget)) {\n      setMessage('Orçamento ultrapassado, verifique o valor do serviço!');\n      setType('error');\n      project.services.pop();\n      return false;\n    } // add service cost to project cost total\n\n\n    project.cost = newCost;\n    fetch(`http://localhost:5000/projects/${project.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    }).then(resp => resp.json()).then(data => {\n      setServices(data.services);\n      setShowServiceForm(!showServiceForm);\n      setMessage('Serviço adicionado!');\n      setType('success');\n    });\n  }\n\n  function removeService(id, cost) {\n    const servicesUpdated = project.services.filter(service => service.id !== id);\n    const projectUpdated = project;\n    projectUpdated.services = servicesUpdated;\n    projectUpdated.cost = parseFloat(projectUpdated.cost) - parseFloat(cost);\n    fetch(`http://localhost:5000/projects/${projectUpdated.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(projectUpdated)\n    }).then(resp => resp.json()).then(data => {\n      setProject(projectUpdated);\n      setServices(servicesUpdated);\n      setMessage('Serviço removido com sucesso!');\n    });\n  }\n\n  function toggleProjectForm() {\n    setShowProjectForm(!showProjectForm);\n  }\n\n  function toggleServiceForm() {\n    setShowServiceForm(!showServiceForm);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, project.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.project_details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    customClass: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, message && /*#__PURE__*/React.createElement(Message, {\n    type: type,\n    msg: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.details_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Projeto: \", project.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: toggleProjectForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, !showProjectForm ? 'Editar projeto' : 'Fechar'), !showProjectForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Categoria:\"), \" \", project.category.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Total do or\\xE7amento:\"), \" R$\", project.budget), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Total utilizado:\"), \" R$\", project.cost)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProjectForm, {\n    handleSubmit: editPost,\n    btnText: \"Concluir Edi\\xE7\\xE3o\",\n    projectData: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.service_form_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Adicione um servi\\xE7o:\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.btn,\n    onClick: toggleServiceForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, !showServiceForm ? 'Adicionar Serviço' : 'Fechar'), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, showServiceForm && /*#__PURE__*/React.createElement(ServiceForm, {\n    handleSubmit: createService,\n    btnText: \"Adicionar Servi\\xE7o\",\n    projectData: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Servi\\xE7os:\"), /*#__PURE__*/React.createElement(Container, {\n    customClass: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, services.length > 0 && services.map(service => /*#__PURE__*/React.createElement(ServiceCard, {\n    id: service.id,\n    name: service.name,\n    cost: service.cost,\n    description: service.description,\n    key: service.id,\n    handleRemove: removeService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  })), services.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, \"N\\xE3o h\\xE1 servi\\xE7os cadastrados.\")))) : /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/renan/Documents/Meus-projetos de front end/Projetos-React/projeto-cost-react/costs/src/components/pages/Project.js"],"names":["parse","v4","uuidv4","React","useParams","useState","useEffect","styles","Loading","Container","ProjectForm","Message","ServiceForm","ServiceCard","Project","id","project","setProject","showProjectForm","setShowProjectForm","showServiceForm","setShowServiceForm","services","setServices","message","setMessage","type","setType","setTimeout","fetch","method","headers","then","resp","json","data","editPost","budget","cost","body","JSON","stringify","createService","lastService","length","lastServiceCost","newCost","parseFloat","pop","removeService","servicesUpdated","filter","service","projectUpdated","toggleProjectForm","toggleServiceForm","name","project_details","details_container","btn","form","category","service_form_container","map","description"],"mappings":"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","sourcesContent":["import { parse, v4 as uuidv4 } from 'uuid'\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport styles from './Project.module.css'\r\n\r\nimport Loading from '../layout/Loading'\r\nimport Container from '../layout/Container'\r\nimport ProjectForm from '../project/ProjectForm'\r\nimport Message from '../layout/Message'\r\nimport ServiceForm from '../service/ServiceForm'\r\nimport ServiceCard from '../service/ServiceCard'\r\n\r\nfunction Project() {\r\n  let { id } = useParams()\r\n  const [project, setProject] = useState([])\r\n  const [showProjectForm, setShowProjectForm] = useState(false)\r\n  const [showServiceForm, setShowServiceForm] = useState(false)\r\n  const [services, setServices] = useState([])\r\n  const [message, setMessage] = useState('')\r\n  const [type, setType] = useState('success')\r\n\r\n  useEffect(() => {\r\n    // Para ver o loading\r\n    setTimeout(\r\n      () =>\r\n        fetch(`http://localhost:5000/projects/${id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n          .then((resp) => resp.json())\r\n          .then((data) => {\r\n            setProject(data)\r\n            setServices(data.services)\r\n          }, 300),\r\n      0,\r\n    )\r\n  }, [id])\r\n\r\n  function editPost(project) {\r\n    // budget validation\r\n    if (project.budget < project.cost) {\r\n      setMessage('O Orçamento não pode ser menor que o custo do projeto!')\r\n      setType('error')\r\n      return false\r\n    }\r\n\r\n    fetch(`http://localhost:5000/projects/${project.id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(project),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setProject(data)\r\n        setShowProjectForm(!showProjectForm)\r\n        setMessage('Projeto atualizado!')\r\n        setType('success')\r\n      })\r\n  }\r\n\r\n  function createService(project) {\r\n    // last service\r\n    const lastService = project.services[project.services.length - 1]\r\n\r\n    lastService.id = uuidv4()\r\n\r\n    const lastServiceCost = lastService.cost\r\n\r\n    const newCost = parseFloat(project.cost) + parseFloat(lastServiceCost)\r\n\r\n    // maximum value validation\r\n    if (newCost > parseFloat(project.budget)) {\r\n      setMessage('Orçamento ultrapassado, verifique o valor do serviço!')\r\n      setType('error')\r\n      project.services.pop()\r\n      return false\r\n    }\r\n\r\n    // add service cost to project cost total\r\n    project.cost = newCost\r\n\r\n    fetch(`http://localhost:5000/projects/${project.id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(project),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setServices(data.services)\r\n        setShowServiceForm(!showServiceForm)\r\n        setMessage('Serviço adicionado!')\r\n        setType('success')\r\n      })\r\n  }\r\n\r\n  function removeService(id, cost) {\r\n    const servicesUpdated = project.services.filter(\r\n      (service) => service.id !== id,\r\n    )\r\n\r\n    const projectUpdated = project\r\n\r\n    projectUpdated.services = servicesUpdated\r\n    projectUpdated.cost = parseFloat(projectUpdated.cost) - parseFloat(cost)\r\n\r\n    fetch(`http://localhost:5000/projects/${projectUpdated.id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(projectUpdated),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setProject(projectUpdated)\r\n        setServices(servicesUpdated)\r\n        setMessage('Serviço removido com sucesso!')\r\n      })\r\n  }\r\n\r\n  function toggleProjectForm() {\r\n    setShowProjectForm(!showProjectForm)\r\n  }\r\n\r\n  function toggleServiceForm() {\r\n    setShowServiceForm(!showServiceForm)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {project.name ? (\r\n        <div className={styles.project_details}>\r\n          <Container customClass=\"column\">\r\n            {message && <Message type={type} msg={message} />}\r\n            <div className={styles.details_container}>\r\n              <h1>Projeto: {project.name}</h1>\r\n              <button className={styles.btn} onClick={toggleProjectForm}>\r\n                {!showProjectForm ? 'Editar projeto' : 'Fechar'}\r\n              </button>\r\n              {!showProjectForm ? (\r\n                <div className={styles.form}>\r\n                  <p>\r\n                    <span>Categoria:</span> {project.category.name}\r\n                  </p>\r\n                  <p>\r\n                    <span>Total do orçamento:</span> R${project.budget}\r\n                  </p>\r\n                  <p>\r\n                    <span>Total utilizado:</span> R${project.cost}\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div className={styles.form}>\r\n                  <ProjectForm\r\n                    handleSubmit={editPost}\r\n                    btnText=\"Concluir Edição\"\r\n                    projectData={project}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={styles.service_form_container}>\r\n              <h2>Adicione um serviço:</h2>\r\n              <button className={styles.btn} onClick={toggleServiceForm}>\r\n                {!showServiceForm ? 'Adicionar Serviço' : 'Fechar'}\r\n              </button>\r\n              <div className={styles.form}>\r\n                {showServiceForm && (\r\n                  <ServiceForm\r\n                    handleSubmit={createService}\r\n                    btnText=\"Adicionar Serviço\"\r\n                    projectData={project}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <h2>Serviços:</h2>\r\n            <Container customClass=\"start\">\r\n              {services.length > 0 &&\r\n                services.map((service) => (\r\n                  <ServiceCard\r\n                    id={service.id}\r\n                    name={service.name}\r\n                    cost={service.cost}\r\n                    description={service.description}\r\n                    key={service.id}\r\n                    handleRemove={removeService}\r\n                  />\r\n                ))}\r\n              {services.length === 0 && <p>Não há serviços cadastrados.</p>}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}